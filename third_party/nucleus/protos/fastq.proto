// Copyright 2018 Google Inc.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived from this
//    software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
syntax = "proto3";

package nucleus.genomics.v1;

// This message represents a single FASTQ record.
message FastqRecord {
  // The first line of a FASTQ record begins with '@' and is followed by a
  // sequence identifier (up to the first whitespace character) and then an
  // optional description. This line is parsed into its constituent id and
  // description.
  // The sequence identifier.
  string id = 1;

  // Optional. The description provided in the header line.
  string description = 2;

  // The raw sequence letters.
  string sequence = 3;

  // The quality values for the sequence. Its length must be the same as the
  // sequence length, and is encoded in ASCII. The meaning of each base quality
  // may vary: it is usually a Phred-scaled score
  // (-10 * log_10(Pr{call is incorrect})) but differs for some older versions
  // of FASTQs.
  string quality = 4;
}

message FastqReaderOptions {
  enum CompressionType {
    NONE = 0;
    GZIP = 1;
  }
  CompressionType compression_type = 1;

  // If true, simply drop invalid records. Otherwise, raise an error on invalid
  // records.
  bool skip_invalid_records = 2;
}

// Options for writing FASTQ files.
// Currently this is a placeholder message but could be used to support
// different choices on output like whether the pad line should include the
// header or not.
message FastqWriterOptions {
}
